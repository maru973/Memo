11/15 Ruby基礎　２
      sort_by : ブロック内の結果を昇順にする。　ブロック内のコードに「-」をつけることで降順にできる。

      slice : 引数で指定されたキーとその値だけを含むハッシュを返す。

      /[A-Z]+/　 : /[A-Z]/だと複数の大文字アルファベットや他の文字が混在した文字列には一致しない。
                  /[A-Z]+/であれば１文字以上の大文字アルファベットの連続にも一致する正規表現パターン。

      group_by : ブロックから出た結果をキー、配列の要素を値とするハッシュを返す。

      each_cons(n) : 要素がn個のハッシュを新しく作る。
                  　　　　例）　[1,2,3,4].each_cons(2) => [[1,2],[2,3],[3,4]]

      split(" ") : 半角スペースの部分で文字列を区切って配列にする。
                  例）　"はじめまして こんにちは 今日は いい天気 ですね".split(" ") => ["はじめまして", "こんにちは", "今日は", "いい天気", "ですね"]

      include?('###') : （）内の文字列を含むかどうか。
                        例) "Hello".include?("lo") => true, "Hello".include?("ol") => false

      .map(&:to_i) : .map{ |obj| obj.to_i }と同結果になる。
                  例）　["1", "2", "3"].map{|v| v.to_i} => [1, 2, 3]
                     ["1", "2", "3"].map(&:to_i) => [1, 2, 3]

      rand : ランダムで数字を表示するメソッド。　　rand(1..10)にすると１〜１０の中からランダムで選ばれる。

      p, puts, print : pは文字列だと""も一緒に出力される。inspectメソッドを呼び出している。デバッグとして主に使う。
                  　　　　　　putsは出力後の末尾に改行が入る。 例) puts "こんにちは" -> こんにちは　
                                                    puts 123          １２３
                     printは出力後の改行はない。 例) print "こんにちは" -> こんにちは123
                                                print 123

      inspect : オブジェクトや配列などをわかりやすく文字列で返してくれるメソッド。
                例) user = User.find(1) -> "#<User id: 1, name: \"test\", created_at: \"2024-01-01 11:11:11\", updated_at: \"2024-01-01 11:11:11\", email: \"xxx@x.x\", password: \"xxxxxxx\">"
                    p user.inspect

      for in : ループ処理のメソッド。　
               for カウンタ変数 in 繰り返す範囲 do    for i in 1..3 do    ->   1番
                    繰り返し処理                        puts "#{i}番"　　　　     　２番
               end　　                             　end                      ３番

      delete_at(0) : 配列の０番目を削除するメソッド。
                  　　　　　　例）　name = ["田中", "鈴木", "佐藤"] 
                        name.delete_at(0) ->  ["鈴木", "佐藤"]
